/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RegisterImport } from './routes/register'
import { Route as MobileRecordImport } from './routes/mobile-record'
import { Route as LoginImport } from './routes/login'
import { Route as protectedImport } from './routes/__protected'
import { Route as TemplatesPageImport } from './routes/TemplatesPage'
import { Route as ResetPasswordPageImport } from './routes/ResetPasswordPage'
import { Route as RegisterPageImport } from './routes/RegisterPage'
import { Route as PatientsPageImport } from './routes/PatientsPage'
import { Route as MobileRecordPageImport } from './routes/MobileRecordPage'
import { Route as LoginPageImport } from './routes/LoginPage'
import { Route as IntegrationsPageImport } from './routes/IntegrationsPage'
import { Route as DocumentsPageImport } from './routes/DocumentsPage'
import { Route as ContactsPageImport } from './routes/ContactsPage'
import { Route as AdminPageImport } from './routes/AdminPage'
import { Route as AccueilPageImport } from './routes/AccueilPage'
import { Route as protectedIndexImport } from './routes/__protected/index'
import { Route as protectedTemplatesImport } from './routes/__protected/templates'
import { Route as protectedPatientsImport } from './routes/__protected/patients'
import { Route as protectedIntegrationsImport } from './routes/__protected/integrations'
import { Route as protectedDocumentsImport } from './routes/__protected/documents'
import { Route as protectedContactsImport } from './routes/__protected/contacts'

// Create/Update Routes

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const MobileRecordRoute = MobileRecordImport.update({
  id: '/mobile-record',
  path: '/mobile-record',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const protectedRoute = protectedImport.update({
  id: '/__protected',
  getParentRoute: () => rootRoute,
} as any)

const TemplatesPageRoute = TemplatesPageImport.update({
  id: '/TemplatesPage',
  path: '/TemplatesPage',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordPageRoute = ResetPasswordPageImport.update({
  id: '/ResetPasswordPage',
  path: '/ResetPasswordPage',
  getParentRoute: () => rootRoute,
} as any)

const RegisterPageRoute = RegisterPageImport.update({
  id: '/RegisterPage',
  path: '/RegisterPage',
  getParentRoute: () => rootRoute,
} as any)

const PatientsPageRoute = PatientsPageImport.update({
  id: '/PatientsPage',
  path: '/PatientsPage',
  getParentRoute: () => rootRoute,
} as any)

const MobileRecordPageRoute = MobileRecordPageImport.update({
  id: '/MobileRecordPage',
  path: '/MobileRecordPage',
  getParentRoute: () => rootRoute,
} as any)

const LoginPageRoute = LoginPageImport.update({
  id: '/LoginPage',
  path: '/LoginPage',
  getParentRoute: () => rootRoute,
} as any)

const IntegrationsPageRoute = IntegrationsPageImport.update({
  id: '/IntegrationsPage',
  path: '/IntegrationsPage',
  getParentRoute: () => rootRoute,
} as any)

const DocumentsPageRoute = DocumentsPageImport.update({
  id: '/DocumentsPage',
  path: '/DocumentsPage',
  getParentRoute: () => rootRoute,
} as any)

const ContactsPageRoute = ContactsPageImport.update({
  id: '/ContactsPage',
  path: '/ContactsPage',
  getParentRoute: () => rootRoute,
} as any)

const AdminPageRoute = AdminPageImport.update({
  id: '/AdminPage',
  path: '/AdminPage',
  getParentRoute: () => rootRoute,
} as any)

const AccueilPageRoute = AccueilPageImport.update({
  id: '/AccueilPage',
  path: '/AccueilPage',
  getParentRoute: () => rootRoute,
} as any)

const protectedIndexRoute = protectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => protectedRoute,
} as any)

const protectedTemplatesRoute = protectedTemplatesImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => protectedRoute,
} as any)

const protectedPatientsRoute = protectedPatientsImport.update({
  id: '/patients',
  path: '/patients',
  getParentRoute: () => protectedRoute,
} as any)

const protectedIntegrationsRoute = protectedIntegrationsImport.update({
  id: '/integrations',
  path: '/integrations',
  getParentRoute: () => protectedRoute,
} as any)

const protectedDocumentsRoute = protectedDocumentsImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => protectedRoute,
} as any)

const protectedContactsRoute = protectedContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => protectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/AccueilPage': {
      id: '/AccueilPage'
      path: '/AccueilPage'
      fullPath: '/AccueilPage'
      preLoaderRoute: typeof AccueilPageImport
      parentRoute: typeof rootRoute
    }
    '/AdminPage': {
      id: '/AdminPage'
      path: '/AdminPage'
      fullPath: '/AdminPage'
      preLoaderRoute: typeof AdminPageImport
      parentRoute: typeof rootRoute
    }
    '/ContactsPage': {
      id: '/ContactsPage'
      path: '/ContactsPage'
      fullPath: '/ContactsPage'
      preLoaderRoute: typeof ContactsPageImport
      parentRoute: typeof rootRoute
    }
    '/DocumentsPage': {
      id: '/DocumentsPage'
      path: '/DocumentsPage'
      fullPath: '/DocumentsPage'
      preLoaderRoute: typeof DocumentsPageImport
      parentRoute: typeof rootRoute
    }
    '/IntegrationsPage': {
      id: '/IntegrationsPage'
      path: '/IntegrationsPage'
      fullPath: '/IntegrationsPage'
      preLoaderRoute: typeof IntegrationsPageImport
      parentRoute: typeof rootRoute
    }
    '/LoginPage': {
      id: '/LoginPage'
      path: '/LoginPage'
      fullPath: '/LoginPage'
      preLoaderRoute: typeof LoginPageImport
      parentRoute: typeof rootRoute
    }
    '/MobileRecordPage': {
      id: '/MobileRecordPage'
      path: '/MobileRecordPage'
      fullPath: '/MobileRecordPage'
      preLoaderRoute: typeof MobileRecordPageImport
      parentRoute: typeof rootRoute
    }
    '/PatientsPage': {
      id: '/PatientsPage'
      path: '/PatientsPage'
      fullPath: '/PatientsPage'
      preLoaderRoute: typeof PatientsPageImport
      parentRoute: typeof rootRoute
    }
    '/RegisterPage': {
      id: '/RegisterPage'
      path: '/RegisterPage'
      fullPath: '/RegisterPage'
      preLoaderRoute: typeof RegisterPageImport
      parentRoute: typeof rootRoute
    }
    '/ResetPasswordPage': {
      id: '/ResetPasswordPage'
      path: '/ResetPasswordPage'
      fullPath: '/ResetPasswordPage'
      preLoaderRoute: typeof ResetPasswordPageImport
      parentRoute: typeof rootRoute
    }
    '/TemplatesPage': {
      id: '/TemplatesPage'
      path: '/TemplatesPage'
      fullPath: '/TemplatesPage'
      preLoaderRoute: typeof TemplatesPageImport
      parentRoute: typeof rootRoute
    }
    '/__protected': {
      id: '/__protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/mobile-record': {
      id: '/mobile-record'
      path: '/mobile-record'
      fullPath: '/mobile-record'
      preLoaderRoute: typeof MobileRecordImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/__protected/contacts': {
      id: '/__protected/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof protectedContactsImport
      parentRoute: typeof protectedImport
    }
    '/__protected/documents': {
      id: '/__protected/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof protectedDocumentsImport
      parentRoute: typeof protectedImport
    }
    '/__protected/integrations': {
      id: '/__protected/integrations'
      path: '/integrations'
      fullPath: '/integrations'
      preLoaderRoute: typeof protectedIntegrationsImport
      parentRoute: typeof protectedImport
    }
    '/__protected/patients': {
      id: '/__protected/patients'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof protectedPatientsImport
      parentRoute: typeof protectedImport
    }
    '/__protected/templates': {
      id: '/__protected/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof protectedTemplatesImport
      parentRoute: typeof protectedImport
    }
    '/__protected/': {
      id: '/__protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedIndexImport
      parentRoute: typeof protectedImport
    }
  }
}

// Create and export the route tree

interface protectedRouteChildren {
  protectedContactsRoute: typeof protectedContactsRoute
  protectedDocumentsRoute: typeof protectedDocumentsRoute
  protectedIntegrationsRoute: typeof protectedIntegrationsRoute
  protectedPatientsRoute: typeof protectedPatientsRoute
  protectedTemplatesRoute: typeof protectedTemplatesRoute
  protectedIndexRoute: typeof protectedIndexRoute
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedContactsRoute: protectedContactsRoute,
  protectedDocumentsRoute: protectedDocumentsRoute,
  protectedIntegrationsRoute: protectedIntegrationsRoute,
  protectedPatientsRoute: protectedPatientsRoute,
  protectedTemplatesRoute: protectedTemplatesRoute,
  protectedIndexRoute: protectedIndexRoute,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/AccueilPage': typeof AccueilPageRoute
  '/AdminPage': typeof AdminPageRoute
  '/ContactsPage': typeof ContactsPageRoute
  '/DocumentsPage': typeof DocumentsPageRoute
  '/IntegrationsPage': typeof IntegrationsPageRoute
  '/LoginPage': typeof LoginPageRoute
  '/MobileRecordPage': typeof MobileRecordPageRoute
  '/PatientsPage': typeof PatientsPageRoute
  '/RegisterPage': typeof RegisterPageRoute
  '/ResetPasswordPage': typeof ResetPasswordPageRoute
  '/TemplatesPage': typeof TemplatesPageRoute
  '': typeof protectedRouteWithChildren
  '/login': typeof LoginRoute
  '/mobile-record': typeof MobileRecordRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/contacts': typeof protectedContactsRoute
  '/documents': typeof protectedDocumentsRoute
  '/integrations': typeof protectedIntegrationsRoute
  '/patients': typeof protectedPatientsRoute
  '/templates': typeof protectedTemplatesRoute
  '/': typeof protectedIndexRoute
}

export interface FileRoutesByTo {
  '/AccueilPage': typeof AccueilPageRoute
  '/AdminPage': typeof AdminPageRoute
  '/ContactsPage': typeof ContactsPageRoute
  '/DocumentsPage': typeof DocumentsPageRoute
  '/IntegrationsPage': typeof IntegrationsPageRoute
  '/LoginPage': typeof LoginPageRoute
  '/MobileRecordPage': typeof MobileRecordPageRoute
  '/PatientsPage': typeof PatientsPageRoute
  '/RegisterPage': typeof RegisterPageRoute
  '/ResetPasswordPage': typeof ResetPasswordPageRoute
  '/TemplatesPage': typeof TemplatesPageRoute
  '/login': typeof LoginRoute
  '/mobile-record': typeof MobileRecordRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/contacts': typeof protectedContactsRoute
  '/documents': typeof protectedDocumentsRoute
  '/integrations': typeof protectedIntegrationsRoute
  '/patients': typeof protectedPatientsRoute
  '/templates': typeof protectedTemplatesRoute
  '/': typeof protectedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/AccueilPage': typeof AccueilPageRoute
  '/AdminPage': typeof AdminPageRoute
  '/ContactsPage': typeof ContactsPageRoute
  '/DocumentsPage': typeof DocumentsPageRoute
  '/IntegrationsPage': typeof IntegrationsPageRoute
  '/LoginPage': typeof LoginPageRoute
  '/MobileRecordPage': typeof MobileRecordPageRoute
  '/PatientsPage': typeof PatientsPageRoute
  '/RegisterPage': typeof RegisterPageRoute
  '/ResetPasswordPage': typeof ResetPasswordPageRoute
  '/TemplatesPage': typeof TemplatesPageRoute
  '/__protected': typeof protectedRouteWithChildren
  '/login': typeof LoginRoute
  '/mobile-record': typeof MobileRecordRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/__protected/contacts': typeof protectedContactsRoute
  '/__protected/documents': typeof protectedDocumentsRoute
  '/__protected/integrations': typeof protectedIntegrationsRoute
  '/__protected/patients': typeof protectedPatientsRoute
  '/__protected/templates': typeof protectedTemplatesRoute
  '/__protected/': typeof protectedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/AccueilPage'
    | '/AdminPage'
    | '/ContactsPage'
    | '/DocumentsPage'
    | '/IntegrationsPage'
    | '/LoginPage'
    | '/MobileRecordPage'
    | '/PatientsPage'
    | '/RegisterPage'
    | '/ResetPasswordPage'
    | '/TemplatesPage'
    | ''
    | '/login'
    | '/mobile-record'
    | '/register'
    | '/reset-password'
    | '/contacts'
    | '/documents'
    | '/integrations'
    | '/patients'
    | '/templates'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/AccueilPage'
    | '/AdminPage'
    | '/ContactsPage'
    | '/DocumentsPage'
    | '/IntegrationsPage'
    | '/LoginPage'
    | '/MobileRecordPage'
    | '/PatientsPage'
    | '/RegisterPage'
    | '/ResetPasswordPage'
    | '/TemplatesPage'
    | '/login'
    | '/mobile-record'
    | '/register'
    | '/reset-password'
    | '/contacts'
    | '/documents'
    | '/integrations'
    | '/patients'
    | '/templates'
    | '/'
  id:
    | '__root__'
    | '/AccueilPage'
    | '/AdminPage'
    | '/ContactsPage'
    | '/DocumentsPage'
    | '/IntegrationsPage'
    | '/LoginPage'
    | '/MobileRecordPage'
    | '/PatientsPage'
    | '/RegisterPage'
    | '/ResetPasswordPage'
    | '/TemplatesPage'
    | '/__protected'
    | '/login'
    | '/mobile-record'
    | '/register'
    | '/reset-password'
    | '/__protected/contacts'
    | '/__protected/documents'
    | '/__protected/integrations'
    | '/__protected/patients'
    | '/__protected/templates'
    | '/__protected/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AccueilPageRoute: typeof AccueilPageRoute
  AdminPageRoute: typeof AdminPageRoute
  ContactsPageRoute: typeof ContactsPageRoute
  DocumentsPageRoute: typeof DocumentsPageRoute
  IntegrationsPageRoute: typeof IntegrationsPageRoute
  LoginPageRoute: typeof LoginPageRoute
  MobileRecordPageRoute: typeof MobileRecordPageRoute
  PatientsPageRoute: typeof PatientsPageRoute
  RegisterPageRoute: typeof RegisterPageRoute
  ResetPasswordPageRoute: typeof ResetPasswordPageRoute
  TemplatesPageRoute: typeof TemplatesPageRoute
  protectedRoute: typeof protectedRouteWithChildren
  LoginRoute: typeof LoginRoute
  MobileRecordRoute: typeof MobileRecordRoute
  RegisterRoute: typeof RegisterRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
}

const rootRouteChildren: RootRouteChildren = {
  AccueilPageRoute: AccueilPageRoute,
  AdminPageRoute: AdminPageRoute,
  ContactsPageRoute: ContactsPageRoute,
  DocumentsPageRoute: DocumentsPageRoute,
  IntegrationsPageRoute: IntegrationsPageRoute,
  LoginPageRoute: LoginPageRoute,
  MobileRecordPageRoute: MobileRecordPageRoute,
  PatientsPageRoute: PatientsPageRoute,
  RegisterPageRoute: RegisterPageRoute,
  ResetPasswordPageRoute: ResetPasswordPageRoute,
  TemplatesPageRoute: TemplatesPageRoute,
  protectedRoute: protectedRouteWithChildren,
  LoginRoute: LoginRoute,
  MobileRecordRoute: MobileRecordRoute,
  RegisterRoute: RegisterRoute,
  ResetPasswordRoute: ResetPasswordRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/AccueilPage",
        "/AdminPage",
        "/ContactsPage",
        "/DocumentsPage",
        "/IntegrationsPage",
        "/LoginPage",
        "/MobileRecordPage",
        "/PatientsPage",
        "/RegisterPage",
        "/ResetPasswordPage",
        "/TemplatesPage",
        "/__protected",
        "/login",
        "/mobile-record",
        "/register",
        "/reset-password"
      ]
    },
    "/AccueilPage": {
      "filePath": "AccueilPage.tsx"
    },
    "/AdminPage": {
      "filePath": "AdminPage.tsx"
    },
    "/ContactsPage": {
      "filePath": "ContactsPage.tsx"
    },
    "/DocumentsPage": {
      "filePath": "DocumentsPage.tsx"
    },
    "/IntegrationsPage": {
      "filePath": "IntegrationsPage.tsx"
    },
    "/LoginPage": {
      "filePath": "LoginPage.tsx"
    },
    "/MobileRecordPage": {
      "filePath": "MobileRecordPage.tsx"
    },
    "/PatientsPage": {
      "filePath": "PatientsPage.tsx"
    },
    "/RegisterPage": {
      "filePath": "RegisterPage.tsx"
    },
    "/ResetPasswordPage": {
      "filePath": "ResetPasswordPage.tsx"
    },
    "/TemplatesPage": {
      "filePath": "TemplatesPage.tsx"
    },
    "/__protected": {
      "filePath": "__protected.tsx",
      "children": [
        "/__protected/contacts",
        "/__protected/documents",
        "/__protected/integrations",
        "/__protected/patients",
        "/__protected/templates",
        "/__protected/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/mobile-record": {
      "filePath": "mobile-record.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/__protected/contacts": {
      "filePath": "__protected/contacts.tsx",
      "parent": "/__protected"
    },
    "/__protected/documents": {
      "filePath": "__protected/documents.tsx",
      "parent": "/__protected"
    },
    "/__protected/integrations": {
      "filePath": "__protected/integrations.tsx",
      "parent": "/__protected"
    },
    "/__protected/patients": {
      "filePath": "__protected/patients.tsx",
      "parent": "/__protected"
    },
    "/__protected/templates": {
      "filePath": "__protected/templates.tsx",
      "parent": "/__protected"
    },
    "/__protected/": {
      "filePath": "__protected/index.tsx",
      "parent": "/__protected"
    }
  }
}
ROUTE_MANIFEST_END */
